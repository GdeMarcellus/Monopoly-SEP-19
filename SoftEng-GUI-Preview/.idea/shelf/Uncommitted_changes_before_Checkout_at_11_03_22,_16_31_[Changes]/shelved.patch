Index: src/GUI/GUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI;\n\nimport javafx.animation.Animation;\nimport javafx.animation.FadeTransition;\nimport javafx.animation.FillTransition;\nimport javafx.application.Application;\nimport javafx.geometry.Insets;\nimport javafx.geometry.Pos;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.ListView;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.KeyCode;\nimport javafx.scene.layout.*;\nimport javafx.scene.paint.Color;\nimport javafx.scene.shape.Circle;\nimport javafx.scene.text.Font;\nimport javafx.scene.text.FontPosture;\nimport javafx.scene.text.FontWeight;\nimport javafx.scene.text.Text;\nimport javafx.stage.Stage;\nimport javafx.util.Duration;\n\nimport java.util.ArrayList;\nimport java.util.Random;\n\n\npublic class GUI extends Application {\n    private final Button dice1 = new Button();\n    private final Button dice2 = new Button();\n    private final Label inspect = new Label();\n    private final ArrayList<Image> facePNG = dice();\n    private final Circle playerTest = new Circle();\n    public static void main(String []args)\n    {\n        launch();\n    }\n    public void start(Stage primaryStage)\n    {\n        gameBoard();\n    }\n\n    /**\n     *\n     */\n    public void start_screen()\n    {\n        //Setting up Stages\n        Stage introduction = new Stage();\n        //Setting up Title Text\n        Text title = createText(\"Property Tycoon\", 100, Color.BLACK,\"arial\");\n        title.setStroke(Color.BLACK);\n        //FillTransition for Title Text\n        FillTransition title_animation = new FillTransition(Duration.millis(3000),title,Color.WHITE, Color.RED);\n        title_animation.setCycleCount(4);\n        title_animation.setAutoReverse(true);\n        title_animation.play();\n        Text enterCont = createText(\"Press Enter to Continue!\",100,Color.BLACK,\"arial\");\n        //Following FadeTransition technique taken from this source:\n        //https://stackoverflow.com/questions/43084698/flashing-label-in-javafx-gui\n        FadeTransition fadeTransition = new FadeTransition(Duration.seconds(1), enterCont);\n        fadeTransition.setFromValue(1.0);\n        fadeTransition.setToValue(0.0);\n        fadeTransition.setCycleCount(Animation.INDEFINITE);\n        fadeTransition.play();\n        //Preparing BorderPane for introduction page\n        BorderPane mainStage = new BorderPane();\n        mainStage.setBottom(enterCont);\n        mainStage.setCenter(title);\n        BorderPane.setAlignment(enterCont, Pos.CENTER);\n        Scene buttonScene;\n        introduction.setScene(buttonScene = new Scene(mainStage,1500, 1000));\n        buttonScene.setOnKeyPressed(e -> {\n            if (e.getCode() == KeyCode.ENTER) {\n                introduction.close();\n                mainMenu();\n            }\n        });\n        introduction.showAndWait();\n    }\n\n    /**\n     * the gameBoard method is used to create the GUI of the main boardGame for the user\n     *\n     * @return void\n     */\n    public void gameBoard()\n    {\n        inspect.setPrefHeight(600);\n        inspect.setPrefWidth(150);\n        inspect.setStyle(\"-fx-font-size: 20;\" +\n                \"fx-border-color:Black\");\n        playerTest.setStroke(Color.BLACK);\n        playerTest.setStyle(\"-fx-background-color: Blue\");\n        playerTest.setRadius(20);\n        Stage gameboard = new Stage();\n        //Creating and setting up the game board (using a GridPane)\n        GridPane board = createBoard();\n        playerTest.setTranslateX(board.getCellBounds(0,0).getMinX());\n        playerTest.setTranslateY(board.getCellBounds(0,0).getCenterY());\n        board.setAlignment(Pos.CENTER);\n        //Creating a title for the scene\n        Text title = createText(\"Property Tycoon\", 50, Color.BLACK,\"arial\");\n        title.setStroke(Color.BLACK);\n        BorderPane.setAlignment(title,Pos.CENTER);\n        //FillTransition for Title Text\n        FillTransition title_mainAnimation = new FillTransition(Duration.millis(3000),title,Color.WHITE, Color.RED);\n        title_mainAnimation.setCycleCount(100);\n        title_mainAnimation.setAutoReverse(true);\n        title_mainAnimation.play();\n        //Creating text for the player section of the board\n        Text players = createText(\"Players\",40,Color.BLACK,\"arial\");\n        //Creating a VBox to store and show player info\n        VBox playerList = new VBox(players,getPlayerInfo(3));\n        playerList.setAlignment(Pos.CENTER);\n        //Creating HBox to store and show the player controls\n        HBox controls = new HBox(controlButtons());\n        controls.setAlignment(Pos.CENTER);\n        controls.setMinHeight(100);\n        Text idk = createText(\"Inspect\",40,Color.BLACK,\"arial\");\n        VBox left = new VBox(idk,inspect);\n        //Setting up the main BorderPane of the scene\n        BorderPane main = new BorderPane();\n        main.setRight(left);\n        main.setBottom(controls);\n        main.setTop(title);\n        main.setCenter(new StackPane(board,playerTest));\n        main.setLeft(playerList);\n        BorderPane.setAlignment(left,Pos.CENTER);\n        //Creating a new Scene\n        gameboard.setScene(new Scene(main,1500,1000));\n        gameboard.showAndWait();\n    }\n\n    /**\n     *\n     * @return Returning the HBox containign all the contorl buttons for the player\n     */\n    private HBox controlButtons()\n    {\n        //Setting up Buy button\n        Button Buy = new Button(\"Buy\");\n        Buy.setPrefSize(100,50);\n        Button move = new Button(\"Move\");\n        move.setPrefSize(100,50);\n        move.setOnAction(e ->\n        {\n           playerTest.setTranslateX(playerTest.getTranslateX()+10);\n           playerTest.setTranslateY(playerTest.getTranslateY()+10);\n        });\n        //Setting up Skip button\n        Button Skip = new Button(\"Skip\");\n        Skip.setPrefSize(100,50);\n        Button roll = new Button(\"Roll Dice\");\n        roll.setPrefSize(100,50);\n        roll.setOnAction(e ->\n        {\n            Random x = new Random();\n            Random y =  new Random();\n            ImageView first = new ImageView(facePNG.get(x.nextInt(0,5)));\n            first.setFitWidth(60);\n            first.setFitHeight(60);\n            dice1.setGraphic(first);\n            ImageView second = new ImageView(facePNG.get(y.nextInt(0,5)));\n            second.setFitWidth(60);\n            second.setFitHeight(60);\n            dice2.setGraphic(second);\n        });\n        //Setting up Build button\n        Button Build = new Button(\"Build\");\n        Build.setPrefSize(100,50);\n        //Setting up HBox to finalize the controls\n        HBox final_control = new HBox(move,Buy,Skip,roll,Build);\n        final_control.setAlignment(Pos.CENTER);\n        final_control.setSpacing(100);\n        return final_control;\n    }\n\n    /**\n     *\n     * @return Returns a ListView for all the player information\n     */\n    private ListView<String> getPlayerInfo(int playerNo)\n    {\n        //Temporary ListView, String type will change later\n        ListView<String> player = new ListView<>();\n        for (int j = 0; j<playerNo; j++)\n            {\n            StringBuilder playerInfo = new StringBuilder();\n            for (int i = 0; i < 3; i++) {\n                if (i == 0) {\n                    playerInfo.append(\"Player Name: \" + i + \"\\n\");\n                } else if (i == 1) {\n                    playerInfo.append(\"Money: \" + i + \"\\n\");\n                } else {\n                    playerInfo.append(\"Buildings owned: \" + i + \"\\n\");\n                }\n            }\n            player.getItems().add(String.valueOf(playerInfo));\n        }\n        return player;\n    }\n\n    /**\n     *\n     * @param\n     * @return void\n     */\n    public void mainMenu()\n    {\n        //Creating stage for the mainMenu\n        Stage mainMenu = new Stage();\n        //Creating exit button\n        Button exit = new Button(\"Exit\");\n        exit.setOnAction( e -> {System.exit(0);});\n        //Main Text set up\n        Text main_Text = createText(\"Main Menu\",50,Color.BLACK,\"arial\");\n        BorderPane.setAlignment(main_Text,Pos.CENTER);\n        BorderPane main = new BorderPane();\n        //Creating Buttons\n        Button quick_game_button = new Button(\"Quick Game\");\n        //Style of Button Gotten from:\n        //http://fxexperience.com/2011/12/styling-fx-buttons-with-css/\n        quick_game_button.setStyle(\"-fx-padding: 8 15 15 15;\\n\" +\n                \"    -fx-background-insets: 0,0 0 5 0, 0 0 6 0, 0 0 7 0;\\n\" +\n                \"    -fx-background-radius: 8;\\n\" +\n                \"    -fx-background-color: \\n\" +\n                \"        linear-gradient(from 0% 93% to 0% 100%, #a34313 0%, #903b12 100%),\\n\" +\n                \"        #9d4024,\\n\" +\n                \"        #d86e3a,\\n\" +\n                \"        radial-gradient(center 50% 50%, radius 100%, #d86e3a, #c54e2c);\\n\" +\n                \"    -fx-effect: dropshadow( gaussian , rgba(0,0,0,0.75) , 4,0,0,1 );\\n\" +\n                \"    -fx-font-weight: bold;\\n\" +\n                \"    -fx-font-size: 8em;\");\n        quick_game_button.setPrefWidth(500);\n        quick_game_button.setPrefHeight(200);\n        quick_game_button.setOnAction(e ->\n        {\n            mainMenu.close();\n            gameBoard();\n        });\n        Button settings_button = new Button(\"Settings\");\n        settings_button.setPrefWidth(500);\n        settings_button.setPrefHeight(200);\n        settings_button.setFont(Font.font(\"verdana\", FontWeight.BOLD, FontPosture.REGULAR, 15));\n        settings_button.setStyle(\"\"+\n                \"    -fx-background-insets: 0,0 0 5 0, 0 0 6 0, 0 0 7 0;\\n\" +\n                \"    -fx-background-radius: 8;\\n\" +\n                \"    -fx-background-color: \\n\" +\n                \"        linear-gradient(from 0% 93% to 0% 100%, #a34313 0%, #903b12 100%),\\n\" +\n                \"        #9d4024,\\n\" +\n                \"        #d86e3a,\\n\" +\n                \"        radial-gradient(center 50% 50%, radius 100%, #d86e3a, #c54e2c);\\n\" +\n                \"    -fx-effect: dropshadow( gaussian , rgba(0,0,0,0.75) , 4,0,0,1 );\\n\" +\n                \"    -fx-font-weight: bold;\\n\" +\n                \"    -fx-font-size: 8em;\");\n        settings_button.setOnAction(e ->\n                {\n                System.out.println(\"Second Works\");\n                mainMenu.close();\n                });\n        HBox title =  new HBox(main_Text, exit);\n        title.setAlignment(Pos.TOP_CENTER);\n        VBox main_buttons = new VBox(quick_game_button,settings_button);\n        main_buttons.setAlignment(Pos.CENTER);\n        main_buttons.setSpacing(50);\n        main.setCenter(main_buttons);\n        main.setTop(title);\n        mainMenu.setScene(new Scene(main,1500,1000));\n        mainMenu.showAndWait();\n    }\n\n    /**\n     * The createBoard() method returns a gridPane containing a board with its tiles.\n     * It also contains two boxes representing the dices\n     * @return Returns a gridpane, which represents the gaming board with all of its tiles.\n     */\n    public GridPane createBoard()\n    {\n        //count is used to keep track of the png in the Base folder\n        int count = 1;\n        //Creating gridpane to store the board\n        GridPane gridPane = new GridPane();\n        for (int i = 0; i < 10; i++)\n        {\n            for (int j = 0; j < 10; j++)\n            {\n               if(i == 0 || j == 0 || i == 9 || j == 9)\n               {\n                   //Store image in Image tile\n                   Image tile = new Image(\"GUI/Base/\" + count + \".png\");\n                   //String location used to test button functionality\n                   String location = i + \"  \" + j + \"\\nName: \" + tile.getUrl();\n                   ImageView set = new ImageView(tile);\n                   set.setFitHeight(60);\n                   set.setFitWidth(60);\n                   //Setting up the Button for each tile\n                   Button insert = new Button();\n                   insert.setOnAction(e->\n                   {\n\n                       inspect.setWrapText(true);\n                       inspect.setText(\"Tile Name: ???\" + '\\n' + \"Owner: ???\" + '\\n' + \"Building Level: ???\"+\n                               '\\n' + location);\n                   });\n                   insert.setStyle(\"-fx-background-color: Transparent\");\n                   insert.setGraphic(set);\n                   insert.setPadding(Insets.EMPTY);\n                   gridPane.add(insert,i,j);\n                   count++;\n               }\n               //\n               else if (i == 2 && j == 4)\n               {\n                   Button fake = new Button(\"Card Slot\");\n                   fake.setOnAction(e ->\n                   {\n                       Alert a = new Alert(Alert.AlertType.CONFIRMATION);\n                       a.show();\n                   });\n                   gridPane.add(fake,2,4);\n               }\n               else if (i == 5 && j == 4)\n               {\n                   Button insert = new Button(\"Bank\");\n                   insert.setOnAction(e->{\n                       Image bank = new Image(\"GUI/bank.gif\");\n                       ImageView bankAnimation = new ImageView(bank);\n                       Alert image = new Alert(Alert.AlertType.CONFIRMATION);\n                       image.setGraphic(bankAnimation);\n                       image.show();\n                       System.out.println(bankAnimation);\n                   });\n\n                   gridPane.add(insert,5,4);\n               }\n               //\n               else if (i == 7 && j == 4)\n               {\n                   Button fake = new Button(\"Card Slot 2\");\n                   fake.setOnAction(e ->\n                   {\n                       Alert a = new Alert(Alert.AlertType.CONFIRMATION);\n                       a.show();\n                   });\n                   gridPane.add(fake,7,4);\n               }\n               //\n               else if (i == 3 && j == 8)\n               {\n                   ImageView face1 = new ImageView(facePNG.get(0));\n                   dice1.setGraphic(face1);\n                   face1.setFitHeight(60);\n                   face1.setFitWidth(60);\n                   dice1.setStyle(\"-fx-background-color: Transparent\");\n                   dice1.setPadding(Insets.EMPTY);\n                   gridPane.add(dice1,3,8);\n               }\n               //\n               else if (i == 6 && j == 8)\n               {\n                   ImageView face = new ImageView(facePNG.get(0));\n                   dice2.setGraphic(face);\n                   face.setFitHeight(60);\n                   face.setFitWidth(60);\n                   dice2.setStyle(\"-fx-background-color: Transparent\");\n                   dice2.setPadding(Insets.EMPTY);\n                   gridPane.add(dice2,6,8);\n               }\n            }\n        }\n        return gridPane;\n    }\n     public ArrayList<Image> dice()\n     {\n         ArrayList<Image> diceFaces = new ArrayList<>();\n         for (int i = 0; i<6; i++)\n         {\n             diceFaces.add(new Image(\"GUI/dice/\" + (i+1) + \".png\"));\n         }\n         return diceFaces;\n     }\n    /**\n     *\n     * @param content\n     * @param size\n     * @param col\n     * @param font\n     * @return\n     */\n    public Text createText(String content, int size, Color col, String font)\n    {\n        //createText is used to simplify the creation of any text\n        Text returnText = new Text(content);\n        returnText.setStyle(String.format(\"-fx-font: %d %s\",size,font));\n        returnText.setSelectionFill(col);\n        return returnText;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GUI/GUI.java b/src/GUI/GUI.java
--- a/src/GUI/GUI.java	
+++ b/src/GUI/GUI.java	
@@ -1,5 +1,6 @@
 package GUI;
 
+
 import javafx.animation.Animation;
 import javafx.animation.FadeTransition;
 import javafx.animation.FillTransition;
